# See https://fly.io/docs/app-guides/continuous-deployment-with-github-actions/

name: Deploy and Release

on:
  push:
    branches:
      - main
    tags:
      - '*.*.*'

permissions:
  contents: write
  discussions: write
  packages: write

jobs:
  deploy:
    name: Deploy and Release
    runs-on: ubuntu-latest
    concurrency: deploy-group
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract tag version number
        id: get_version
        uses: battila7/get-version-action@v2
        if: startsWith(github.ref, 'refs/tags/')

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Generate release notes with commit links (only for tag pushes)
      - name: Generate Release Notes
        id: generate_notes
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          # Get previous tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          # If no previous tag, get all commits
          if [ -z "$PREVIOUS_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- [%s](https://github.com/${{ github.repository }}/commit/%H)" --reverse)
          else
            COMMITS=$(git log --pretty=format:"- [%s](https://github.com/${{ github.repository }}/commit/%H)" ${PREVIOUS_TAG}..HEAD --reverse)
          fi
          
          # Format release notes
          FORMATTED_NOTES="## Changes\n${COMMITS}"
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo -e "${FORMATTED_NOTES}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Login to Docker Hub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Extract Docker tags based on event type
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: jusranotheridea/foundryvtt-rest-api-relay
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/') }}

      # Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Deploy to Fly.io (always on main push, optional on tags)
      - name: Setup Fly CLI
        uses: superfly/flyctl-actions/setup-flyctl@master
        
      - name: Deploy to Fly.io
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      # Create GitHub release for tags
      - name: Create ZIP archive
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          mkdir -p release
          zip -r release/foundryvtt-rest-api-relay.zip . -x "node_modules/*" -x ".git/*" -x ".github/*"

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: ncipollo/release-action@v1.16.0
        with:
          allowUpdates: false
          name: Release ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "./release/foundryvtt-rest-api-relay.zip"
          tag: ${{ github.ref_name }}
          body: ${{ env.RELEASE_NOTES }}
